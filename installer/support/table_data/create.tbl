Q1JFQVRFIFRBQkxFIGBhcGlgICgKICBgSURgIGludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcigxMDApIERFRkFVTFQgTlVMTCwKICBgYXBpa2V5YCB2YXJjaGFyKDEwMCkgREVGQVVMVCBOVUxMLAogIGB1c2VybmFtZWAgdmFyY2hhcigxMDApIERFRkFVTFQgTlVMTCwKICBgcGFnZV9saXZlYCB2YXJjaGFyKDMpIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElEYCksCiAgS0VZIGB1bmlxdWVfaWRgIChgdW5pcXVlX2lkYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTIzIERFRkFVTFQgQ0hBUlNFVD11dGY4
Q1JFQVRFIFRBQkxFIGBjb21wb25lbnRfYnVpbGRlcmAgKAogIGBJRGAgaW50KDIwKSB1bnNpZ25lZCBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwKICBgdW5pcXVlX2lkYCB2YXJjaGFyKDEwMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYGNvbXBvbmVudF9uYW1lYCB2YXJjaGFyKDIwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgYXNzb2NfdGFibGVgIHRleHQgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYGNvbXBvbmVudF92YWx1ZWAgdGV4dCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgdmFyaWFibGVfdHlwZWAgdmFyY2hhcigxNSkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYG1hcF9pbnB1dGAgdmFyY2hhcigyMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBwYWdlX29yZGVyYCBpbnQoMykgTk9UIE5VTEwsCiAgYHBhZ2VfbGl2ZWAgdmFyY2hhcigzKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgY29yZV9zZXR0aW5nYCBpbnQoMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsCiAgUFJJTUFSWSBLRVkgKGBJRGApLAogIEtFWSBgdW5pcXVlX2lkYCAoYHVuaXF1ZV9pZGApCikgRU5HSU5FPUlubm9EQiBBVVRPX0lOQ1JFTUVOVD03MiBERUZBVUxUIENIQVJTRVQ9dXRmOCBDT0xMQVRFPXV0ZjhfdW5pY29kZV9jaQ%3D%3D
Q1JFQVRFIFRBQkxFIGBjb21wb25lbnRzYCAoCiAgYElEYCBpbnQoMTApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoMTAwKSBDT0xMQVRFIHV0ZjhfYmluIERFRkFVTFQgJycsCiAgYHJlZl9wYWdlYCB2YXJjaGFyKDI1NSkgQ09MTEFURSB1dGY4X2JpbiBERUZBVUxUICcnLAogIGBwYXJlbnRfaWRgIHZhcmNoYXIoMTAwKSBDT0xMQVRFIHV0ZjhfYmluIERFRkFVTFQgJycsCiAgYHJlZl9hbmNob3JgIHZhcmNoYXIoMjU1KSBDT0xMQVRFIHV0ZjhfYmluIERFRkFVTFQgJycsCiAgYHJlZl9zcG90YCB2YXJjaGFyKDI1NSkgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYGNvbXBvbmVudF90eXBlYCB2YXJjaGFyKDUwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgY29udGVudGAgbG9uZ3RleHQgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpLAogIGBjc3NgIGxvbmdibG9iLAogIGBhX2hyZWZgIHZhcmNoYXIoMzAwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgZW1haWxfaWRgIHZhcmNoYXIoNzApIENIQVJBQ1RFUiBTRVQgdXRmOCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIGBzdHlsZV9zaGVldF9uYW1lYCB2YXJjaGFyKDIwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgZmlsZWAgdmFyY2hhcigyMCkgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYGZpbGVfc2l6ZWAgdGV4dCBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2ksCiAgYGZpbGVfcGF0aGAgdGV4dCBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2ksCiAgYGZpbGVfbmFtZWAgdGV4dCBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2ksCiAgYGNsYXNzYCB2YXJjaGFyKDMwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgYWRtaW5fbm90ZXNgIHRleHQgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpLAogIGBsb2dpbl92aWV3YCB2YXJjaGFyKDMpIENIQVJBQ1RFUiBTRVQgdXRmOCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIGBsb2dpbl9wZXJtaXNzaW9uYCB2YXJjaGFyKDIwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgcGFnZV9vcmRlcmAgaW50KDEwKSBERUZBVUxUICcxJywKICBgcGFnZV9saXZlYCB2YXJjaGFyKDMpIENIQVJBQ1RFUiBTRVQgdXRmOCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIGBhZG1pbl9sb2NrYCB2YXJjaGFyKDMpIENIQVJBQ1RFUiBTRVQgdXRmOCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIGBjb3JlX3NldHRpbmdgIGludCgxKSBERUZBVUxUICcwJywKICBgYWRtaW5fdGFnYCB2YXJjaGFyKDMwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgX2lkYCB2YXJjaGFyKDEwMCkgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYCpgIHZhcmNoYXIoMjU1KSBDT0xMQVRFIHV0ZjhfYmluIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElEYCksCiAgS0VZIGBwYXJlbnRfaWRgIChgcGFyZW50X2lkYCksCiAgS0VZIGB1bmlxdWVfaWRgIChgdW5pcXVlX2lkYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTI0MiBERUZBVUxUIENIQVJTRVQ9dXRmOCBDT0xMQVRFPXV0ZjhfYmlu
Q1JFQVRFIFRBQkxFIGBkcm9wZG93bl9tZW51c2AgKAogIGBJRGAgaW50KDIwKSBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwKICBgdW5pcXVlX2lkYCB2YXJjaGFyKDEwMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBhc3NvY19jb2x1bW5gIHZhcmNoYXIoNjApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgTlVMTCwKICBgbWVudU5hbWVgIHZhcmNoYXIoMTI4KSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUIE5VTEwsCiAgYG1lbnVWYWxgIHRleHQgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2ksCiAgYHJlc3RyaWN0aW9uYCB2YXJjaGFyKDMwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUIE5VTEwsCiAgYGNvcmVfc2V0dGluZ2AgaW50KDEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLAogIGBwYWdlX29yZGVyYCBpbnQoMykgREVGQVVMVCBOVUxMLAogIGBwYWdlX2xpdmVgIHZhcmNoYXIoMykgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIFBSSU1BUlkgS0VZIChgSURgKSwKICBLRVkgYGFzc29jX2NvbHVtbmAgKGBhc3NvY19jb2x1bW5gKSwKICBLRVkgYHVuaXF1ZV9pZGAgKGB1bmlxdWVfaWRgKQopIEVOR0lORT1Jbm5vREIgQVVUT19JTkNSRU1FTlQ9MTM0IERFRkFVTFQgQ0hBUlNFVD11dGY4IENPTExBVEU9dXRmOF91bmljb2RlX2Np
Q1JFQVRFIFRBQkxFIGBlbWFpbGVyYCAoCiAgYElEYCBpbnQoMjApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoMTAwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgY29udGVudGAgbG9uZ3RleHQgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYGNvbnRlbnRfYmFja2AgbG9uZ3RleHQgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYHJldHVybl9jb3B5YCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGByZXR1cm5fYWRkcmVzc2AgdmFyY2hhcigxMDApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGByZXR1cm5fcmVzcG9uc2VgIHRleHQgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYGVtYWlsX2lkYCB2YXJjaGFyKDIwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgcGFnZV9saXZlYCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBjb3JlX3NldHRpbmdgIGludCgxKSBOT1QgTlVMTCwKICBgcGFnZV9vcmRlcmAgaW50KDMpIERFRkFVTFQgJzAnLAogIFBSSU1BUlkgS0VZIChgSURgKSwKICBVTklRVUUgS0VZIGBlbWFpbF9pZGAgKGBlbWFpbF9pZGApLAogIEtFWSBgdW5pcXVlX2lkYCAoYHVuaXF1ZV9pZGAsYGVtYWlsX2lkYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTUgREVGQVVMVCBDSEFSU0VUPXV0ZjggQ09MTEFURT11dGY4X3VuaWNvZGVfY2k%3D
Q1JFQVRFIFRBQkxFIGBmaWxlX3R5cGVzYCAoCiAgYElEYCBpbnQoMjApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoMTAwKSBOT1QgTlVMTCwKICBgZmlsZV9leHRlbnNpb25gIHZhcmNoYXIoMTApIE5PVCBOVUxMLAogIGBmaWxlX3R5cGVgIHZhcmNoYXIoMjApIE5PVCBOVUxMLAogIGBwYWdlX2xpdmVgIHZhcmNoYXIoMykgTk9UIE5VTEwsCiAgYGNvcmVfc2V0dGluZ2AgaW50KDEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLAogIGBwYWdlX29yZGVyYCBpbnQoMykgREVGQVVMVCBOVUxMLAogIFBSSU1BUlkgS0VZIChgSURgKQopIEVOR0lORT1Jbm5vREIgQVVUT19JTkNSRU1FTlQ9MTU4IERFRkFVTFQgQ0hBUlNFVD11dGY4
Q1JFQVRFIFRBQkxFIGBmb3JtX2J1aWxkZXJgICgKICBgSURgIGludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcigxMDApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBjb2x1bW5fdHlwZWAgdmFyY2hhcig2MCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBjb2x1bW5fbmFtZWAgdmFyY2hhcig2MCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBzaXplYCB2YXJjaGFyKDEwMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBkZWZhdWx0X3NldHRpbmdgIHZhcmNoYXIoMTApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgTlVMTCwKICBgcmVzdHJpY3Rpb25gIHZhcmNoYXIoNCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBjb3JlX3NldHRpbmdgIGludCgxKSBOT1QgTlVMTCBERUZBVUxUICcwJywKICBgcGFnZV9vcmRlcmAgaW50KDMpIERFRkFVTFQgTlVMTCwKICBgcGFnZV9saXZlYCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElEYCksCiAgS0VZIGB1bmlxdWVfaWRgIChgdW5pcXVlX2lkYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTg2IERFRkFVTFQgQ0hBUlNFVD11dGY4IENPTExBVEU9dXRmOF91bmljb2RlX2Np
Q1JFQVRFIFRBQkxFIGBmb3JtX3J1bGVzYCAoCiAgYElEYCBpbnQoMjApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoMTAwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgYXNzb2NfdGFibGVgIHZhcmNoYXIoNzApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBhc3NvY19jb2x1bW5gIHZhcmNoYXIoNzApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBpbnB1dF9ydWxlYCB2YXJjaGFyKDMwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgcGFnZV9saXZlYCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBjb3JlX3NldHRpbmdgIGludCgxKSBOT1QgTlVMTCBERUZBVUxUICcwJywKICBgcGFnZV9vcmRlcmAgaW50KDMpIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElEYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTYgREVGQVVMVCBDSEFSU0VUPXV0ZjggQ09MTEFURT11dGY4X3VuaWNvZGVfY2k%3D
Q1JFQVRFIFRBQkxFIGBoZWxwX2Rlc2tgICgKICBgSURgIGludCgzMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcigxMDApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBhc3NvY190YWJsZWAgdmFyY2hhcigxMDApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBhc3NvY19jb2x1bW5gIHZhcmNoYXIoMTAwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgY29udGVudGAgbG9uZ3RleHQgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYGRpZmZpY3VsdHlgIHZhcmNoYXIoMykgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYHBhZ2VfbGl2ZWAgdmFyY2hhcigzKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgY29yZV9zZXR0aW5nYCBpbnQoMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsCiAgUFJJTUFSWSBLRVkgKGBJRGApLAogIFVOSVFVRSBLRVkgYHVuaXF1ZV9pZGAgKGB1bmlxdWVfaWRgKSwKICBGVUxMVEVYVCBLRVkgYGNvbnRlbnRgIChgY29udGVudGApCikgRU5HSU5FPUlubm9EQiBBVVRPX0lOQ1JFTUVOVD0xMTUgREVGQVVMVCBDSEFSU0VUPXV0ZjggQ09MTEFURT11dGY4X3VuaWNvZGVfY2k%3D
Q1JFQVRFIFRBQkxFIGBpbWFnZV9idWNrZXRgICgKICBgSURgIGJpZ2ludCg1MCkgdW5zaWduZWQgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcig1MCkgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF9iaW4gREVGQVVMVCAnJywKICBgcmVmX3BhZ2VgIHZhcmNoYXIoMzApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGB1c2VyZ3JvdXBgIGludCgyKSBOT1QgTlVMTCwKICBgdXNlcm5hbWVgIHZhcmNoYXIoMjU1KSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X2JpbiBOT1QgTlVMTCBERUZBVUxUICcnLAogIGBjb250ZW50YCBsb25ndGV4dCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgZmlsZWAgdmFyY2hhcigzMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYGZpbGVfcGF0aGAgdmFyY2hhcigyNTUpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMIERFRkFVTFQgJycsCiAgYGZpbGVfbmFtZWAgdmFyY2hhcigyNTUpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYGZpbGVfc2l6ZWAgdmFyY2hhcigyMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwsCiAgYG5vdGVzYCB0ZXh0IENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBsb2dpbl92aWV3YCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBwYWdlX29yZGVyYCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBwYWdlX2xpdmVgIHZhcmNoYXIoMykgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgY29yZV9zZXR0aW5nYCBpbnQoMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsCiAgUFJJTUFSWSBLRVkgKGBJRGApLAogIEtFWSBgcmVmX3BhZ2VgIChgcmVmX3BhZ2VgKSwKICBLRVkgYHVuaXF1ZV9pZGAgKGB1bmlxdWVfaWRgKQopIEVOR0lORT1Jbm5vREIgREVGQVVMVCBDSEFSU0VUPXV0ZjggQ09MTEFURT11dGY4X3VuaWNvZGVfY2k%3D
Q1JFQVRFIFRBQkxFIGBtYWluX21lbnVzYCAoCiAgYElEYCBpbnQoMjApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoNTApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYHBhcmVudF9pZGAgdmFyY2hhcig1MCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnJywKICBgZnVsbF9wYXRoYCB2YXJjaGFyKDYwMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBtZW51X25hbWVgIHZhcmNoYXIoNzApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgTlVMTCwKICBgcGFnZV9vcHRpb25zYCBsb25ndGV4dCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSwKICBgbGlua2AgdmFyY2hhcigyMDApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYHRlbXBsYXRlYCB2YXJjaGFyKDEwMCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwgREVGQVVMVCAndGVtcGxhdGUvZGVmYXVsdCcsCiAgYHVzZV9wYWdlYCB2YXJjaGFyKDI1NSkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGBhdXRvX2NhY2hlYCB2YXJjaGFyKDMpIENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMIERFRkFVTFQgJ29mZicsCiAgYGluX21lbnViYXJgIHZhcmNoYXIoMykgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgTk9UIE5VTEwgREVGQVVMVCAnb2ZmJywKICBgaXNfYWRtaW5gIGludCgxKSBERUZBVUxUICcwJywKICBgYXV0b19md2RgIHZhcmNoYXIoMzAwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUIE5VTEwsCiAgYGF1dG9fZndkX3Bvc3RgIHZhcmNoYXIoNCkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAnb2ZmJywKICBgY3JlYXRlX2ZvbGRlcmAgdmFyY2hhcigzKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCBERUZBVUxUICdvZmYnLAogIGBzZXNzaW9uX3N0YXR1c2AgdmFyY2hhcigzKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCBERUZBVUxUICdvZmYnLAogIGB1c2VyZ3JvdXBgIGludCgyKSBERUZBVUxUICcyJywKICBgcGFnZV9saXZlYCB2YXJjaGFyKDIwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCBERUZBVUxUICdvZmYnLAogIGBwYWdlX29yZGVyYCBpbnQoMykgTk9UIE5VTEwgREVGQVVMVCAnMScsCiAgYGNvcmVfc2V0dGluZ2AgaW50KDEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLAogIGBjb21tYW5kYCB2YXJjaGFyKDI1NSkgQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCAncGFnZV9idWlsZGVyJywKICBQUklNQVJZIEtFWSAoYElEYCksCiAgVU5JUVVFIEtFWSBgdW5pcXVlX2lkYCAoYHVuaXF1ZV9pZGApCikgRU5HSU5FPUlubm9EQiBBVVRPX0lOQ1JFTUVOVD02NCBERUZBVUxUIENIQVJTRVQ9dXRmOCBDT0xMQVRFPXV0ZjhfdW5pY29kZV9jaQ%3D%3D
Q1JFQVRFIFRBQkxFIGBtZW1iZXJzX2Nvbm5lY3RlZGAgKAogIGBJRGAgaW50KDIwKSB1bnNpZ25lZCBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwKICBgdW5pcXVlX2lkYCB2YXJjaGFyKDUwKSBERUZBVUxUICcnLAogIGBpcF9hZGRyZXNzYCB2YXJjaGFyKDI0KSBERUZBVUxUICcnLAogIGB1c2VybmFtZWAgdmFyY2hhcigxMDApIERFRkFVTFQgJycsCiAgYHRpbWVzdGFtcGAgdGltZXN0YW1wIE5PVCBOVUxMIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVAsCiAgUFJJTUFSWSBLRVkgKGBJRGApLAogIFVOSVFVRSBLRVkgYHVzZXJuYW1lYCAoYHVzZXJuYW1lYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTUgREVGQVVMVCBDSEFSU0VUPXV0Zjg%3D
Q1JFQVRFIFRBQkxFIGBtZW51X2Rpc3BsYXlgICgKICBgSURgIGludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcig1MCkgREVGQVVMVCAnJywKICBgcGFyZW50X2lkYCB2YXJjaGFyKDUwKSBERUZBVUxUICcnLAogIGBjb250ZW50YCBsb25ndGV4dCwKICBgb3B0aW9uc2AgbG9uZ3RleHQsCiAgYGNvcmVfc2V0dGluZ2AgaW50KDEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLAogIGBwYWdlX2xpdmVgIHZhcmNoYXIoNCkgREVGQVVMVCAnb2ZmJywKICBQUklNQVJZIEtFWSAoYElEYCksCiAgVU5JUVVFIEtFWSBgcGFyZW50X2lkYCAoYHBhcmVudF9pZGApCikgRU5HSU5FPUlubm9EQiBBVVRPX0lOQ1JFTUVOVD0xOSBERUZBVUxUIENIQVJTRVQ9dXRmOA%3D%3D
Q1JFQVRFIFRBQkxFIGByb3V0aW5nX3RhYmxlYCAoCiAgYElEYCBpbnQoMjApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoMTAwKSBOT1QgTlVMTCwKICBgdGFibGVfaWRgIGludCg1KSBOT1QgTlVMTCwKICBgdGFibGVfbmFtZWAgdmFyY2hhcig3MCkgTk9UIE5VTEwsCiAgYHBhZ2VfbGl2ZWAgdmFyY2hhcigzKSBOT1QgTlVMTCwKICBgY29yZV9zZXR0aW5nYCBpbnQoMSkgTk9UIE5VTEwgREVGQVVMVCAnMCcsCiAgYHBhZ2Vfb3JkZXJgIGludCgzKSBERUZBVUxUIE5VTEwsCiAgYGFsbG93ZWRfcmVxdWVzdGAgdmFyY2hhcigxKSBERUZBVUxUICdwJywKICBgdXNlcmdyb3VwYCBpbnQoMykgREVGQVVMVCAnMScsCiAgUFJJTUFSWSBLRVkgKGBJRGApLAogIFVOSVFVRSBLRVkgYHRhYmxlX2lkYCAoYHRhYmxlX2lkYCksCiAgVU5JUVVFIEtFWSBgdGFibGVfbmFtZWAgKGB0YWJsZV9uYW1lYCkKKSBFTkdJTkU9SW5ub0RCIEFVVE9fSU5DUkVNRU5UPTY5IERFRkFVTFQgQ0hBUlNFVD11dGY4
Q1JFQVRFIFRBQkxFIGBzeXN0ZW1fc2V0dGluZ3NgICgKICBgSURgIGludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcigxMDApIERFRkFVTFQgTlVMTCwKICBgcGFnZV9lbGVtZW50YCB2YXJjaGFyKDMwKSBERUZBVUxUIE5VTEwsCiAgYG5hbWVgIHZhcmNoYXIoMTAwKSBERUZBVUxUIE5VTEwsCiAgYGNvbXBvbmVudGAgdmFyY2hhcig0MCkgREVGQVVMVCBOVUxMLAogIGBtYXBfaW5wdXRgIHZhcmNoYXIoMjApIERFRkFVTFQgTlVMTCwKICBgY29udGVudGAgbG9uZ3RleHQgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBoaWRkZW5fdGFza2AgdmFyY2hhcigyMCkgREVGQVVMVCBOVUxMLAogIGBoaWRkZW5fdGFza190cmlnZ2VyYCB2YXJjaGFyKDIwKSBERUZBVUxUIE5VTEwsCiAgYHVzZXJncm91cGAgaW50KDQpIERFRkFVTFQgJzEnLAogIGBwYWdlX29yZGVyYCBpbnQoMykgTk9UIE5VTEwgREVGQVVMVCAnMScsCiAgYHBhZ2VfbGl2ZWAgdmFyY2hhcigzKSBERUZBVUxUIE5VTEwsCiAgYGNvcmVfc2V0dGluZ2AgaW50KDEpIE5PVCBOVUxMIERFRkFVTFQgJzAnLAogIFBSSU1BUlkgS0VZIChgSURgKQopIEVOR0lORT1Jbm5vREIgQVVUT19JTkNSRU1FTlQ9MjkwIERFRkFVTFQgQ0hBUlNFVD11dGY4
Q1JFQVRFIFRBQkxFIGB1cGxvYWRfZGlyZWN0b3J5YCAoCiAgYElEYCBpbnQoMjApIE5PVCBOVUxMIEFVVE9fSU5DUkVNRU5ULAogIGB1bmlxdWVfaWRgIHZhcmNoYXIoMTAwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIGB1c2VyZ3JvdXBgIGludCgzKSBERUZBVUxUICczJywKICBgdGVybXNfcmVxYCB2YXJjaGFyKDUwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIGBmaWxlX3BhdGhgIHZhcmNoYXIoMjAwKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgYXNzb2NfdGFibGVgIHZhcmNoYXIoNzApIENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgJycsCiAgYGNvcmVfc2V0dGluZ2AgaW50KDEpIERFRkFVTFQgJzAnLAogIGBwYWdlX29yZGVyYCBpbnQoMykgREVGQVVMVCAnMScsCiAgYHBhZ2VfbGl2ZWAgdmFyY2hhcigzKSBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBERUZBVUxUICcnLAogIFBSSU1BUlkgS0VZIChgSURgKSwKICBVTklRVUUgS0VZIGBmaWxlX3BhdGhgIChgZmlsZV9wYXRoYCksCiAgVU5JUVVFIEtFWSBgdW5pcXVlX2lkYCAoYHVuaXF1ZV9pZGApCikgRU5HSU5FPUlubm9EQiBBVVRPX0lOQ1JFTUVOVD0xMyBERUZBVUxUIENIQVJTRVQ9dXRmOCBDT0xMQVRFPXV0ZjhfdW5pY29kZV9jaQ%3D%3D
Q1JFQVRFIFRBQkxFIGB1c2VyX2RvbWFpbnNgICgKICBgSURgIGludCgyMCkgTk9UIE5VTEwgQVVUT19JTkNSRU1FTlQsCiAgYHVuaXF1ZV9pZGAgdmFyY2hhcigxMDApIERFRkFVTFQgTlVMTCwKICBgdXNlcm5hbWVgIHZhcmNoYXIoMjApIERFRkFVTFQgTlVMTCwKICBgZG9tYWluX25hbWVgIHZhcmNoYXIoMTAwKSBERUZBVUxUIE5VTEwsCiAgYHBhZ2VfbGl2ZWAgdmFyY2hhcigzKSBOT1QgTlVMTCBERUZBVUxUICdvbicsCiAgYGNvcmVfc2V0dGluZ2AgdmFyY2hhcigxKSBERUZBVUxUICcxJywKICBQUklNQVJZIEtFWSAoYElEYCksCiAgVU5JUVVFIEtFWSBgdXNlcm5hbWVgIChgdXNlcm5hbWVgKSwKICBLRVkgYHVuaXF1ZV9pZGAgKGB1bmlxdWVfaWRgKQopIEVOR0lORT1Jbm5vREIgQVVUT19JTkNSRU1FTlQ9NyBERUZBVUxUIENIQVJTRVQ9dXRmOA%3D%3D
Q1JFQVRFIFRBQkxFIGB1c2Vyc2AgKAogIGBJRGAgaW50KDIwKSBOT1QgTlVMTCBBVVRPX0lOQ1JFTUVOVCwKICBgdW5pcXVlX2lkYCB2YXJjaGFyKDUwKSBDSEFSQUNURVIgU0VUIHV0ZjggQ09MTEFURSB1dGY4X3VuaWNvZGVfY2kgREVGQVVMVCBOVUxMLAogIGB1c2VybmFtZWAgdmFyY2hhcig2MCkgQ09MTEFURSB1dGY4X2JpbiBOT1QgTlVMTCBERUZBVUxUICcnLAogIGBwYXNzd29yZGAgdmFyY2hhcigyNTYpIENPTExBVEUgdXRmOF9iaW4gTk9UIE5VTEwgREVGQVVMVCAnJywKICBgZmlyc3RfbmFtZWAgdmFyY2hhcig2MCkgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIE5PVCBOVUxMLAogIGBsYXN0X25hbWVgIHZhcmNoYXIoNjApIENIQVJBQ1RFUiBTRVQgdXRmOCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgZW1haWxgIHZhcmNoYXIoNjApIENIQVJBQ1RFUiBTRVQgdXRmOCBDT0xMQVRFIHV0ZjhfdW5pY29kZV9jaSBOT1QgTlVMTCwKICBgdXNlcmdyb3VwYCBpbnQoMTApIE5PVCBOVUxMIERFRkFVTFQgJzInLAogIGBwYWdlX29yZGVyYCBpbnQoMykgREVGQVVMVCBOVUxMLAogIGBwYWdlX2xpdmVgIHZhcmNoYXIoMykgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgTlVMTCwKICBgdXNlcl9zdGF0dXNgIHZhcmNoYXIoNCkgQ0hBUkFDVEVSIFNFVCB1dGY4IENPTExBVEUgdXRmOF91bmljb2RlX2NpIERFRkFVTFQgTlVMTCwKICBgY29yZV9zZXR0aW5nYCBpbnQoNCkgREVGQVVMVCBOVUxMLAogIGBmaWxlYCB2YXJjaGFyKDIwMCkgQ09MTEFURSB1dGY4X2JpbiBERUZBVUxUIE5VTEwsCiAgYGZpbGVfcGF0aGAgdmFyY2hhcigyMDApIENPTExBVEUgdXRmOF9iaW4gREVGQVVMVCBOVUxMLAogIGBmaWxlX25hbWVgIHZhcmNoYXIoNTApIENPTExBVEUgdXRmOF9iaW4gREVGQVVMVCBOVUxMLAogIGByZXNldF9wYXNzd29yZGAgdmFyY2hhcigyNTUpIENPTExBVEUgdXRmOF9iaW4gREVGQVVMVCBOVUxMLAogIGB0aW1lc3RhbXBgIHZhcmNoYXIoMjU1KSBDT0xMQVRFIHV0ZjhfYmluIERFRkFVTFQgTlVMTCwKICBQUklNQVJZIEtFWSAoYElEYCksCiAgVU5JUVVFIEtFWSBgdXNlcm5hbWVgIChgdXNlcm5hbWVgKSwKICBVTklRVUUgS0VZIGBlbWFpbGAgKGBlbWFpbGApLAogIFVOSVFVRSBLRVkgYGVtYWlsXzJgIChgZW1haWxgKSwKICBVTklRVUUgS0VZIGBlbWFpbF8zYCAoYGVtYWlsYCksCiAgVU5JUVVFIEtFWSBgZW1haWxfNGAgKGBlbWFpbGApLAogIFVOSVFVRSBLRVkgYGVtYWlsXzVgIChgZW1haWxgKSwKICBVTklRVUUgS0VZIGBlbWFpbF82YCAoYGVtYWlsYCksCiAgVU5JUVVFIEtFWSBgZW1haWxfN2AgKGBlbWFpbGApLAogIFVOSVFVRSBLRVkgYGVtYWlsXzhgIChgZW1haWxgKSwKICBVTklRVUUgS0VZIGBlbWFpbF85YCAoYGVtYWlsYCksCiAgVU5JUVVFIEtFWSBgZW1haWxfMTBgIChgZW1haWxgKSwKICBVTklRVUUgS0VZIGBlbWFpbF8xMWAgKGBlbWFpbGApLAogIEtFWSBgcGFzc3dvcmRgIChgcGFzc3dvcmRgKDI1NSkpCikgRU5HSU5FPUlubm9EQiBBVVRPX0lOQ1JFTUVOVD01MyBERUZBVUxUIENIQVJTRVQ9dXRmOCBDT0xMQVRFPXV0ZjhfYmlu